{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TestFlowPro UI Testing Schema",
  "description": "JSON Schema for UI test suites using Playwright in TestFlowPro",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the test suite"
    },
    "suiteName": {
      "type": "string",
      "description": "Name of the UI test suite"
    },
    "applicationName": {
      "type": "string",
      "description": "Name of the application or service being tested"
    },
    "type": {
      "type": "string",
      "enum": ["UI"],
      "description": "Type of test suite"
    },
    "baseUrl": {
      "type": "string",
      "format": "uri",
      "description": "Base URL for the application under test"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "serviceName": {"type": "string"},
          "suiteType": {"type": "string"}
        }
      }
    },
    "testCases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UITestCase"
      }
    }
  },
  "required": ["id", "suiteName", "applicationName", "type", "testCases"],
  "definitions": {
    "UITestCase": {
      "type": "object",
      "properties": {
        "id": {"type": "string"},
        "name": {"type": "string"},
        "status": {"type": "string"},
        "type": {
          "type": "string",
          "enum": ["UI"]
        },
        "testData": {
          "type": "array",
          "items": {}
        },
        "testSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UITestStep"
          }
        }
      },
      "required": ["name", "type", "testData", "testSteps"]
    },
    "UITestStep": {
      "type": "object",
      "properties": {
        "id": {"type": "string"},
        "keyword": {
          "type": "string",
          "enum": [
            "openBrowser", "closeBrowser", "closePage", "maximize", "minimize", "setViewportSize",
            "switchToFrame", "switchToMainFrame", "acceptAlert", "dismissAlert", "getAlertText",
            "goto", "waitForNavigation", "reload", "goBack", "goForward", "refresh",
            "click", "dblClick", "rightClick", "type", "fill", "press", "clear",
            "select", "check", "uncheck", "setChecked", "hover", "focus",
            "scrollIntoViewIfNeeded", "scrollTo", "scrollUp", "scrollDown",
            "dragAndDrop", "uploadFile", "downloadFile",
            "getText", "getAttribute", "getTitle", "getUrl", "getValue", "getCount",
            "assertText", "assertVisible", "assertHidden", "assertEnabled", "assertDisabled",
            "assertCount", "assertValue", "assertAttribute", "assertHaveText", "assertHaveCount",
            "assertChecked", "assertUnchecked", "assertContainsText", "assertUrl", "assertTitle",
            "waitForSelector", "waitForTimeout", "waitForFunction", "waitForElement", "waitForText",
            "screenshot", "customStep", "customCode"
          ]
        },
        "locator": {
          "$ref": "#/definitions/UILocatorDefinition"
        },
        "value": {"type": "string"},
        "options": {"type": "object"},
        "customCode": {
          "type": "string",
          "description": "Raw Playwright code for customCode keyword"
        },
        "store": {
          "type": "object",
          "description": "Variable storage for data extraction keywords",
          "patternProperties": {
            "^[a-zA-Z][a-zA-Z0-9_]*$": {
              "type": "string",
              "enum": ["$text", "$attribute", "$title", "$url", "$value", "$count"]
            }
          },
          "additionalProperties": false
        },
        "skipOnFailure": {
          "type": "boolean",
          "description": "Skip this step if previous steps failed"
        }
      },
      "required": ["keyword"],
      "allOf": [
        {
          "if": {
            "properties": {
              "keyword": {
                "enum": ["click", "check", "uncheck", "hover", "assertVisible", "assertHidden", "assertEnabled", "assertDisabled", "assertChecked", "assertUnchecked"]
              }
            }
          },
          "then": {
            "required": ["locator"]
          }
        },
        {
          "if": {
            "properties": {
              "keyword": {
                "enum": ["fill", "press", "select", "assertHaveText"]
              }
            }
          },
          "then": {
            "required": ["locator", "value"]
          }
        },
        {
          "if": {
            "properties": {
              "keyword": {
                "enum": ["goto", "waitForTimeout", "screenshot"]
              }
            }
          },
          "then": {
            "required": ["value"]
          }
        },
        {
          "if": {
            "properties": {
              "keyword": {
                "const": "getText"
              }
            }
          },
          "then": {
            "required": ["locator"],
            "properties": {
              "store": {
                "type": "object",
                "minProperties": 1
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "keyword": {
                "const": "getAttribute"
              }
            }
          },
          "then": {
            "required": ["locator", "value"],
            "properties": {
              "store": {
                "type": "object",
                "minProperties": 1
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "keyword": {
                "const": "customCode"
              }
            }
          },
          "then": {
            "required": ["customCode"]
          }
        }
      ]
    },
    "UILocatorDefinition": {
      "type": "object",
      "properties": {
        "strategy": {
          "type": "string",
          "enum": ["role", "label", "text", "testId", "placeholder", "altText", "title", "css", "xpath"]
        },
        "value": {"type": "string"},
        "options": {
          "$ref": "#/definitions/UILocatorOptions"
        },
        "filter": {
          "$ref": "#/definitions/UIFilterDefinition"
        }
      },
      "required": ["strategy", "value"]
    },
    "UILocatorOptions": {
      "type": "object",
      "properties": {
        "name": {"type": "string"},
        "exact": {"type": "boolean"},
        "level": {"type": "number"},
        "checked": {"type": "boolean"},
        "disabled": {"type": "boolean"},
        "expanded": {"type": "boolean"},
        "includeHidden": {"type": "boolean"},
        "pressed": {"type": "boolean"},
        "selected": {"type": "boolean"},
        "hasText": {"type": "string"},
        "hasNotText": {"type": "string"}
      },
      "additionalProperties": false
    },
    "UIFilterDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["hasText", "has", "hasNot"]
        }
      },
      "required": ["type"],
      "allOf": [
        {
          "if": {
            "properties": {"type": {"const": "hasText"}}
          },
          "then": {
            "properties": {
              "value": {"type": "string"}
            },
            "required": ["value"]
          }
        },
        {
          "if": {
            "properties": {"type": {"enum": ["has", "hasNot"]}}
          },
          "then": {
            "properties": {
              "locator": {"$ref": "#/definitions/UILocatorDefinition"}
            },
            "required": ["locator"]
          }
        }
      ]
    }
  }
}